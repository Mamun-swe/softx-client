[{"/media/mamun/Tools/MERN/softx/client/src/index.js":"1","/media/mamun/Tools/MERN/softx/client/src/reportWebVitals.js":"2","/media/mamun/Tools/MERN/softx/client/src/App.js":"3","/media/mamun/Tools/MERN/softx/client/src/pages/auth/Login.js":"4","/media/mamun/Tools/MERN/softx/client/src/pages/auth/Register.js":"5","/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Master.js":"6","/media/mamun/Tools/MERN/softx/client/src/pages/student/Master.js":"7","/media/mamun/Tools/MERN/softx/client/src/components/PrivateRoute/Index.js":"8","/media/mamun/Tools/MERN/softx/client/src/utils/Authenticate.js":"9","/media/mamun/Tools/MERN/softx/client/src/utils/apiURL.js":"10","/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Requests/Index.js":"11","/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Book/Index.js":"12","/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Dashboard/Index.js":"13","/media/mamun/Tools/MERN/softx/client/src/pages/student/home/Index.js":"14","/media/mamun/Tools/MERN/softx/client/src/components/librarian/SideMenu/Index.js":"15","/media/mamun/Tools/MERN/softx/client/src/pages/student/library/Show.js":"16","/media/mamun/Tools/MERN/softx/client/src/pages/student/library/Index.js":"17","/media/mamun/Tools/MERN/softx/client/src/pages/student/pendingRequests/Index.js":"18","/media/mamun/Tools/MERN/softx/client/src/components/librarian/RequestList/Index.js":"19","/media/mamun/Tools/MERN/softx/client/src/components/librarian/BookList/Index.js":"20","/media/mamun/Tools/MERN/softx/client/src/components/librarian/Modal/CreateBook.js":"21","/media/mamun/Tools/MERN/softx/client/src/components/librarian/Modal/EditBook.js":"22","/media/mamun/Tools/MERN/softx/client/src/components/librarian/Modal/DeleteModal.js":"23","/media/mamun/Tools/MERN/softx/client/src/components/student/Navbar/Index.js":"24","/media/mamun/Tools/MERN/softx/client/src/components/student/Modal/ViewStatus.js":"25","/media/mamun/Tools/MERN/softx/client/src/utils/HandleResponse.js":"26"},{"size":433,"mtime":1607131546440,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1607080767639,"results":"29","hashOfConfig":"28"},{"size":808,"mtime":1607358303097,"results":"30","hashOfConfig":"28"},{"size":5054,"mtime":1607181915848,"results":"31","hashOfConfig":"28"},{"size":5483,"mtime":1607274753415,"results":"32","hashOfConfig":"28"},{"size":2917,"mtime":1607358939221,"results":"33","hashOfConfig":"28"},{"size":645,"mtime":1607177526478,"results":"34","hashOfConfig":"28"},{"size":625,"mtime":1607357009093,"results":"35","hashOfConfig":"28"},{"size":232,"mtime":1607358407907,"results":"36","hashOfConfig":"28"},{"size":110,"mtime":1607128746167,"results":"37","hashOfConfig":"28"},{"size":3509,"mtime":1607275678679,"results":"38","hashOfConfig":"28"},{"size":7251,"mtime":1607274753437,"results":"39","hashOfConfig":"28"},{"size":2209,"mtime":1607276937583,"results":"40","hashOfConfig":"28"},{"size":7397,"mtime":1607354704761,"results":"41","hashOfConfig":"28"},{"size":3210,"mtime":1607281189545,"results":"42","hashOfConfig":"28"},{"size":3518,"mtime":1607354704852,"results":"43","hashOfConfig":"28"},{"size":5290,"mtime":1607354704825,"results":"44","hashOfConfig":"28"},{"size":3309,"mtime":1607354704875,"results":"45","hashOfConfig":"28"},{"size":3787,"mtime":1607274753368,"results":"46","hashOfConfig":"28"},{"size":3521,"mtime":1607195184254,"results":"47","hashOfConfig":"28"},{"size":8389,"mtime":1607194811916,"results":"48","hashOfConfig":"28"},{"size":8750,"mtime":1607195853797,"results":"49","hashOfConfig":"28"},{"size":1829,"mtime":1607196309846,"results":"50","hashOfConfig":"28"},{"size":5456,"mtime":1607102513668,"results":"51","hashOfConfig":"28"},{"size":2008,"mtime":1607133701794,"results":"52","hashOfConfig":"28"},{"size":287,"mtime":1607358771544,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10sjy32",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/mamun/Tools/MERN/softx/client/src/index.js",[],"/media/mamun/Tools/MERN/softx/client/src/reportWebVitals.js",[],"/media/mamun/Tools/MERN/softx/client/src/App.js",[],"/media/mamun/Tools/MERN/softx/client/src/pages/auth/Login.js",[],["112","113"],"/media/mamun/Tools/MERN/softx/client/src/pages/auth/Register.js",[],"/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Master.js",[],"/media/mamun/Tools/MERN/softx/client/src/pages/student/Master.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/PrivateRoute/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/utils/Authenticate.js",[],"/media/mamun/Tools/MERN/softx/client/src/utils/apiURL.js",[],"/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Requests/Index.js",["114"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { apiURL } from '../../../utils/apiURL'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport RequestList from '../../../components/librarian/RequestList/Index'\n\nconst Index = () => {\n    const [isLoading, setLoading] = useState(true)\n    const [updateLoading, setUpdateLoading] = useState(null)\n    const [serverMsg, setServerMsg] = useState()\n    const [requests, setRequests] = useState([])\n\n    const header = {\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n    }\n\n    useEffect(() => {\n        fetchRequests()\n    }, [])\n\n    // Fetch Requests\n    const fetchRequests = async () => {\n        try {\n            const response = await axios.get(`${apiURL}librarian/request/index`, header)\n            if (response.status === 200) {\n                setRequests(response.data.requests)\n                setLoading(false)\n                setServerMsg(null)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                setServerMsg(error.response.data.message)\n                console.log(error.response)\n            }\n        }\n    }\n\n    // Update status\n    const updateStatus = async (data) => {\n        try {\n            setUpdateLoading(data.id)\n            const response = await axios.post(`${apiURL}librarian/request/status/update`, data, header)\n            if (response.status === 200) {\n                fetchRequests()\n                setUpdateLoading(null)\n                toast.success(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    return (\n        <div className=\"index\">\n            <div className=\"container-fluid p-0 py-2 py-lg-0\">\n                <div className=\"col-12 pl-lg-0 mb-3\">\n                    <div className=\"card border-0 shadow\">\n                        <div className=\"card-body p-3\">\n                            <h5>All Requests</h5>\n                        </div>\n                    </div>\n                </div>\n\n                {isLoading ?\n                    <div className=\"col-12 pl-lg-0 mb-3\">\n                        <div className=\"card border-0 shadow\">\n                            <div className=\"card-body\">\n                                <p>Loading...</p>\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n                {serverMsg ?\n                    <div className=\"col-12 pl-lg-0 mb-3 text-center\">\n                        <div className=\"card border-0 shadow\">\n                            <div className=\"card-body\">\n                                <h6>{serverMsg}</h6>\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n                {/* Requests List */}\n                {requests && requests.length > 0 ?\n                    <div className=\"col-12 pl-lg-0 mb-3\">\n                        <div className=\"card border-0 shadow\">\n                            <div className=\"card-body\">\n                                <RequestList status={updateStatus} loading={updateLoading} requests={requests} />\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n            </div>\n        </div>\n    );\n}\n\nexport default Index;","/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Book/Index.js",["115"],"import React, { useState, useEffect } from 'react'\nimport { Icon } from 'react-icons-kit'\nimport { ic_add } from 'react-icons-kit/md/ic_add'\nimport axios from 'axios'\nimport { apiURL } from '../../../utils/apiURL'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport BookList from '../../../components/librarian/BookList/Index'\nimport CreateBookModal from '../../../components/librarian/Modal/CreateBook'\nimport EditBookModal from '../../../components/librarian/Modal/EditBook'\nimport DeleteBookModal from '../../../components/librarian/Modal/DeleteModal'\n\nconst Index = () => {\n    const [show, setShow] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [storeLoading, setStoreLoading] = useState(false)\n    const [books, setBooks] = useState([])\n    const [deleteShow, setDeleteShow] = useState(false)\n    const [loadingDelete, setLoadingDelete] = useState(false)\n    const [bookId, setBookId] = useState({})\n\n    const [editShow, setEditShow] = useState(false)\n    const [editLoading, setEditLoading] = useState(false)\n    const [editData, setEditData] = useState()\n\n    const [serverMsg, setServerMsg] = useState()\n\n\n    const header = {\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n    }\n\n    useEffect(() => {\n        fetchBooks()\n    }, [])\n\n    // Fetch Books\n    const fetchBooks = async () => {\n        try {\n            const response = await axios.get(`${apiURL}librarian/book/index`, header)\n            if (response.status === 200) {\n                setBooks(response.data.results)\n                setLoading(false)\n                setServerMsg(null)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                setServerMsg(error.response.data.message)\n                console.log(error.response)\n            }\n        }\n    }\n\n    // Store Books\n    const storeBook = async (data) => {\n        try {\n            setStoreLoading(true)\n            const response = await axios.post(`${apiURL}librarian/book/store`, data.formData, header)\n            if (response.status === 201) {\n                fetchBooks()\n                toast.success(response.data.message)\n                setStoreLoading(false)\n                setShow(false)\n            }\n        } catch (error) {\n            if (error) {\n                setStoreLoading(false)\n                console.log(error.response)\n            }\n        }\n    }\n\n    // Handle Edit \n    const handleEdit = (data) => {\n        setEditData(data)\n        setEditShow(true)\n    }\n\n    // Submit Update\n    const submitUpdate = async (data) => {\n        try {\n            setEditLoading(true)\n            const response = await axios.put(`${apiURL}librarian/book/${editData.id}/update`, data.formData, header)\n            if (response.status === 200) {\n                fetchBooks()\n                toast.success(response.data.message)\n                setEditLoading(false)\n                setEditShow(false)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error.response)\n            }\n        }\n    }\n\n    // Handle Delete\n    const handleDelete = (id) => {\n        setBookId(id)\n        setDeleteShow(true)\n    }\n\n    // Submit Delete \n    const submitDelete = async () => {\n        try {\n            setLoadingDelete(true)\n            const response = await axios.delete(`${apiURL}librarian/book/${bookId}/delete`, header)\n            if (response.status === 200) {\n                fetchBooks()\n                toast.success(response.data.message)\n                setLoadingDelete(false)\n                setDeleteShow(false)\n            }\n        } catch (error) {\n            if (error) {\n                setLoadingDelete(false)\n                setDeleteShow(false)\n                console.log(error.response)\n            }\n        }\n    }\n\n\n    return (\n        <div className=\"index\">\n            <div className=\"container-fluid p-0 py-2 py-lg-0\">\n                <div className=\"col-12 pl-lg-0 mb-3\">\n                    <div className=\"card border-0 shadow\">\n                        <div className=\"card-body p-3\">\n                            <div className=\"d-flex\">\n                                <div><h5>All Books</h5></div>\n                                <div className=\"ml-auto\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn shadow-none\"\n                                        onClick={() => setShow(true)}\n                                    >\n                                        <Icon icon={ic_add} size={22} />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {isLoading ?\n                    <div className=\"col-12 pl-lg-0 mb-3\">\n                        <div className=\"card border-0 shadow\">\n                            <div className=\"card-body\">\n                                <p>Loading...</p>\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n                {serverMsg ?\n                    <div className=\"col-12 pl-lg-0 mb-3 text-center\">\n                        <div className=\"card border-0 shadow\">\n                            <div className=\"card-body\">\n                                <h6>{serverMsg}</h6>\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n                {/* Book List */}\n                {books && books.length > 0 ?\n                    <div className=\"col-12 pl-lg-0 mb-3\">\n                        <div className=\"card border-0 shadow\">\n                            <div className=\"card-body\">\n                                <BookList\n                                    books={books}\n                                    isdelete={handleDelete}\n                                    isedit={handleEdit}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    : null}\n\n            </div>\n\n            {/* Add Modal */}\n            <CreateBookModal\n                show={show}\n                bookdata={storeBook}\n                loading={storeLoading}\n                onHide={() => setShow(false)}\n            />\n\n            {/* Edit Modal */}\n            {editShow ?\n                <EditBookModal\n                    show={editShow}\n                    data={editData}\n                    updatedata={submitUpdate}\n                    loading={editLoading}\n                    onHide={() => setEditShow(false)}\n                />\n                : null}\n\n            {/* Delete Modal */}\n            {deleteShow ?\n                <DeleteBookModal\n                    show={deleteShow}\n                    dodelete={submitDelete}\n                    loading={loadingDelete}\n                    onHide={() => setDeleteShow(false)}\n                />\n                : null}\n\n        </div>\n    );\n};\n\nexport default Index;","/media/mamun/Tools/MERN/softx/client/src/pages/librarian/Dashboard/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/pages/student/home/Index.js",["116"],"import React, { useEffect, useState } from 'react'\nimport { Icon } from 'react-icons-kit'\nimport { ic_search } from 'react-icons-kit/md'\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios'\nimport { apiURL } from '../../../utils/apiURL'\nimport '../../../styles/student/style.scss'\nimport Skeleton from 'react-loading-skeleton'\nimport { useHistory } from 'react-router-dom'\n\nimport NavBar from '../../../components/student/Navbar/Index'\nimport ViewStatusModal from '../../../components/student/Modal/ViewStatus'\n\nconst Index = () => {\n    const history = useHistory()\n    const { register, handleSubmit, errors } = useForm()\n    const [isLoading, setLoading] = useState(true)\n    const [show, setShow] = useState(false)\n    const [bookId, setBookId] = useState({})\n    const [message, setMessage] = useState({})\n    const [books, setBooks] = useState([])\n    const [filteredBooks, setFilteredBooks] = useState(books)\n    const [fakeArr] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    const [requestLoading, setRequestLoading] = useState(false)\n\n    const header = {\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n    }\n\n\n    useEffect(() => {\n        const fetchBooks = async () => {\n            try {\n                const response = await axios.get(`${apiURL}student/request/book`, header)\n                if (response.status === 200) {\n                    setLoading(false)\n                    setBooks(response.data.results)\n                    setFilteredBooks(response.data.results)\n                }\n            } catch (error) {\n                if (error) {\n                    console.log(error)\n                }\n            }\n        }\n\n        fetchBooks()\n    }, [])\n\n    // Submit Search\n    const onSubmit = async (data) => {\n        const query = data.query\n        try {\n            setLoading(true)\n            const response = await axios.get(`${apiURL}student/request/book/search/${query}`)\n            if (response.status === 200) {\n                setFilteredBooks(response.data)\n                setLoading(false)\n                console.log(response.data)\n            }\n        } catch (error) {\n            if (error) {\n                setLoading(false)\n                console.log(error)\n            }\n        }\n    }\n\n    // View Book\n    const ViewBook = async (id) => {\n        try {\n            setBookId(id)\n            const response = await axios.get(`${apiURL}student/request/${id}/view`, header)\n            if (response.status === 200) {\n                history.push(`/student/book/${id}/show`)\n            }\n        } catch (error) {\n            if (error) {\n                setMessage(error.response.data.message)\n                setShow(true)\n            }\n        }\n    }\n\n    // Sent Access Request\n    const sendAccessRequest = async () => {\n        const data = {\n            bookId: bookId\n        }\n        try {\n            setRequestLoading(true)\n            const response = await axios.post(`${apiURL}student/request/book`, data, header)\n\n            if (response.status === 200) {\n                setRequestLoading(false)\n            }\n            if (response.status === 209) {\n                setRequestLoading(false)\n                setMessage(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error)\n            }\n        }\n    }\n\n\n    // Check Loading\n    if (isLoading) {\n        return (\n            <div>\n                <NavBar />\n                <div className=\"container py-3\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {fakeArr.map((i) =>\n                                <div className=\"card rounded-0 border-0 book-card\" key={i}>\n                                    <div className=\"card-body text-center\">\n                                        <Skeleton animation={true} count={1} width={100} height={120} />\n                                        <br />\n                                        <Skeleton animation={true} count={1} width={100} height={20} />\n                                        <br />\n                                        <Skeleton animation={true} count={1} width={80} height={27} />\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"home\">\n            <NavBar />\n\n            {/* Header */}\n            <div className=\"header\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            <h4>Welcome to SoftX library</h4>\n                            <p>Search book by name</p>\n\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"query\"\n                                        className={errors.query ? \"form-control shadow-none danger-border\" : \"form-control shadow-none\"}\n                                        placeholder={\"Type book name\"}\n                                        ref={register({ required: true })}\n                                    />\n                                    <Icon icon={ic_search} className={errors.query ? \"icon danger-icon\" : \"icon\"} size={25} />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Content Body */}\n            <div className=\"content-body\">\n                <div className=\"container py-3\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n\n                            {filteredBooks && filteredBooks.length > 0 && filteredBooks.map((item, i) =>\n                                <div className=\"card rounded-0 border-0 book-card\" key={i}>\n                                    <div className=\"card-body text-center\">\n                                        <img src={item.bookImage} className=\"img-fluid\" alt=\"...\" />\n                                        <p>{item.bookName.slice(0, 15)}</p>\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-light shadow-none\"\n                                            onClick={() => ViewBook(item.id)}\n                                        >View</button>\n                                    </div>\n                                </div>\n                            )}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            {/* Status Modal */}\n            {show ?\n                <ViewStatusModal\n                    show={show}\n                    message={message}\n                    loading={requestLoading}\n                    sendAccessRequest={sendAccessRequest}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n\n        </div>\n    );\n};\n\nexport default Index;","/media/mamun/Tools/MERN/softx/client/src/components/librarian/SideMenu/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/pages/student/library/Show.js",["117"],"import React, { useState, useRef, useEffect } from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport NavBar from '../../../components/student/Navbar/Index'\nimport axios from 'axios'\nimport { apiURL } from '../../../utils/apiURL'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst Show = () => {\n    const contentBox = useRef()\n    const { id } = useParams()\n    const history = useHistory()\n    const [isLoading, setLoading] = useState(true)\n    const [book, setBook] = useState()\n\n    useEffect(() => {\n        const header = {\n            headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n        }\n\n        // View Book\n        const ViewBook = async () => {\n            try {\n                const response = await axios.get(`${apiURL}student/request/${id}/view`, header)\n                if (response.status === 200) {\n                    setBook(response.data.response)\n                    setLoading(false)\n                }\n            } catch (error) {\n                if (error) {\n                    history.push('/student/library')\n                }\n            }\n        }\n\n        ViewBook()\n    }, [id])\n\n    if (isLoading) {\n        return (\n            <div>\n                <NavBar />\n                <div className=\"container py-3 py-lg-5\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-lg-5 text-center\">\n                            <Skeleton animation={true} count={1} width={250} height={350} />\n                        </div>\n\n                        <div className=\"col-12 col-lg-7 py-3 py-lg-0\" ref={contentBox}>\n                            <Skeleton animation={true} count={1} width={contentBox.width} height={30} />\n\n                            <div className=\"pt-3\">\n                                <Skeleton animation={true} count={1} width={contentBox.width} height={20} />\n                                <br />\n                                <Skeleton animation={true} count={1} width={contentBox.width} height={20} />\n                                <br />\n                                <Skeleton animation={true} count={1} width={contentBox.width} height={20} />\n                                <br />\n                                <Skeleton animation={true} count={1} width={contentBox.width} height={20} />\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"show-book\">\n            <NavBar />\n\n            <div className=\"container py-3 py-lg-5\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-lg-5 text-center\">\n                        <img src={book.bookImage} style={styles.image} className=\"img-fluid\" alt=\"...\" />\n                    </div>\n\n                    <div className=\"col-12 col-lg-7 py-3 py-lg-0\">\n                        <h4>gggggg</h4>\n                        <p style={styles.text}>{book.bookName}</p>\n                        <p style={styles.text}>Author: {book.author}</p>\n                        <p style={styles.text}>Genre: {book.genre}</p>\n                        <p style={styles.text}>Release date: {book.releaseDate}</p>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Show;\n\nconst styles = {\n    text: {\n        fontSize: 15,\n        marginBottom: 5\n    },\n    image: {\n        width: 250,\n        height: 350\n    }\n}","/media/mamun/Tools/MERN/softx/client/src/pages/student/library/Index.js",["118"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport { apiURL } from '../../../utils/apiURL'\nimport '../../../styles/student/style.scss'\nimport Skeleton from 'react-loading-skeleton'\n\nimport NavBar from '../../../components/student/Navbar/Index'\nimport ViewStatusModal from '../../../components/student/Modal/ViewStatus'\n\nconst Index = () => {\n    const history = useHistory()\n    const [show, setShow] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [requestLoading, setRequestLoading] = useState(false)\n    const [books, setBooks] = useState([])\n    const [fakeArr] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    const [bookId, setBookId] = useState({})\n    const [message, setMessage] = useState({})\n\n\n    const header = {\n        headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }\n    }\n\n    useEffect(() => {\n        const fetchBooks = async () => {\n            try {\n                const response = await axios.get(`${apiURL}student/request/approved`, header)\n                if (response.status === 200) {\n                    setLoading(false)\n                    setBooks(response.data.requests)\n                }\n            } catch (error) {\n                if (error) {\n                    setLoading(false)\n                }\n            }\n        }\n\n        fetchBooks()\n    }, [])\n\n    // View Book\n    const ViewBook = async (id) => {\n        try {\n            setBookId(id)\n            const response = await axios.get(`${apiURL}student/request/${id}/view`, header)\n            if (response.status === 200) {\n                history.push(`/student/book/${id}/show`)\n            }\n        } catch (error) {\n            if (error) {\n                setMessage(error.response.data.message)\n                setShow(true)\n            }\n        }\n    }\n\n    // Sent Access Request\n    const sendAccessRequest = async () => {\n        const data = {\n            bookId: bookId\n        }\n        try {\n            setRequestLoading(true)\n            const response = await axios.post(`${apiURL}student/request/book`, data, header)\n\n            if (response.status === 200) {\n                setRequestLoading(false)\n            }\n            if (response.status === 209) {\n                setRequestLoading(false)\n                setMessage(response.data.message)\n            }\n        } catch (error) {\n            if (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    if (isLoading) {\n        return (\n            <div>\n                <NavBar />\n                <div className=\"container py-3\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {fakeArr.map((i) =>\n                                <div className=\"card rounded-0 border-0 book-card\" key={i}>\n                                    <div className=\"card-body text-center border\">\n                                        <Skeleton animation={true} count={1} width={100} height={120} />\n                                        <br />\n                                        <Skeleton animation={true} count={1} width={100} height={20} />\n                                        <br />\n                                        <Skeleton animation={true} count={1} width={80} height={27} />\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <NavBar />\n\n            <div className=\"container py-3\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n\n                        {books && books.length > 0 ? books.map((item, i) =>\n                            <div className=\"card rounded-0 border-0 book-card\" key={i}>\n                                <div className=\"card-body text-center\">\n                                    <img src={item.book.bookImage} className=\"img-fluid\" alt=\"...\" />\n                                    <p>{item.book.bookName.slice(0, 15)}</p>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-light shadow-none\"\n                                        onClick={() => ViewBook(item.book.id)}\n                                    >View</button>\n                                </div>\n                            </div>\n                        ) :\n                            <div className=\"text-center py-5\">\n                                <h5>Opps ! No books found in your library.</h5>\n                            </div>\n                        }\n\n                    </div>\n                </div>\n            </div>\n\n            {/* Status Modal */}\n            {show ?\n                <ViewStatusModal\n                    show={show}\n                    message={message}\n                    loading={requestLoading}\n                    sendAccessRequest={sendAccessRequest}\n                    onHide={() => setShow(false)}\n                />\n                : null}\n\n        </div>\n    );\n};\n\nexport default Index;","/media/mamun/Tools/MERN/softx/client/src/pages/student/pendingRequests/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/librarian/RequestList/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/librarian/BookList/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/librarian/Modal/CreateBook.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/librarian/Modal/EditBook.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/librarian/Modal/DeleteModal.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/student/Navbar/Index.js",[],"/media/mamun/Tools/MERN/softx/client/src/components/student/Modal/ViewStatus.js",[],"/media/mamun/Tools/MERN/softx/client/src/utils/HandleResponse.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":8,"nodeType":"125","endLine":21,"endColumn":10,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":36,"column":8,"nodeType":"125","endLine":36,"endColumn":10,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":48,"column":8,"nodeType":"125","endLine":48,"endColumn":10,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":36,"column":8,"nodeType":"125","endLine":36,"endColumn":12,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"129","line":42,"column":8,"nodeType":"125","endLine":42,"endColumn":10,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRequests'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'fetchBooks'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'header'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"145","fix":"149"},"Update the dependencies array to be: [fetchRequests]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchBooks]",{"range":"152","text":"153"},"Update the dependencies array to be: [header]",{"range":"154","text":"155"},"Update the dependencies array to be: [history, id]",{"range":"156","text":"157"},{"range":"158","text":"155"},[678,680],"[fetchRequests]",[1347,1349],"[fetchBooks]",[1722,1724],"[header]",[1156,1160],"[history, id]",[1419,1421]]